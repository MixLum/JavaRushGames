@startuml

title __RACER's Class Diagram__\n

  namespace com.javarush.games.racer {
    enum Direction {
      LEFT
      NONE
      RIGHT
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.FinishLine {
        - isVisible : boolean
        + FinishLine()
        + isCrossed()
        + move()
        + show()
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.GameObject {
        + height : int
        + matrix : int[][]
        + width : int
        + x : int
        + y : int
        + GameObject()
        + GameObject()
        + draw()
        + isCollision()
        + isCollisionPossible()
        - isCollision()
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.PlayerCar {
        + speed : int
        {static} - playerCarHeight : int
        + PlayerCar()
        + getDirection()
        + move()
        + setDirection()
        + stop()
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.ProgressBar {
        - maxValue : int
        + ProgressBar()
        + draw()
        + move()
        - createColoredMatrix()
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.RacerGame {
        {static} + CENTER_X : int
        {static} + HEIGHT : int
        {static} + ROADSIDE_WIDTH : int
        {static} + WIDTH : int
        {static} - RACE_GOAL_CARS_COUNT : int
        - isGameStopped : boolean
        - score : int
        + initialize()
        + onKeyPress()
        + onKeyReleased()
        + onTurn()
        + setCellColor()
        - createGame()
        - drawField()
        - drawScene()
        - gameOver()
        - moveAll()
        - win()
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.RoadMarking {
        - roadMarking : List<GameObject>
        + RoadMarking()
        + draw()
        + move()
    }
  }
  

  namespace com.javarush.games.racer {
    class com.javarush.games.racer.ShapeMatrix {
        {static} + BUS : int[][]
        {static} + DRUNK_CAR : int[][]
        {static} + FINISH_LINE : int[][]
        {static} + PASSENGER_CAR : int[][]
        {static} + PLAYER : int[][]
        {static} + PLAYER_DEAD : int[][]
        {static} + ROAD_MARKING : int[][]
        {static} + SPORT_CAR : int[][]
        {static} + THORN : int[][]
        {static} + TRUCK : int[][]
    }
  }
  

  com.javarush.games.racer.FinishLine -up-|> com.javarush.games.racer.GameObject
  com.javarush.games.racer.PlayerCar -up-|> com.javarush.games.racer.GameObject
  com.javarush.games.racer.PlayerCar o-- com.javarush.games.racer.Direction : direction
  com.javarush.games.racer.ProgressBar o-- com.javarush.games.racer.GameObject : progressBar
  com.javarush.games.racer.ProgressBar o-- com.javarush.games.racer.GameObject : progressBarField
  com.javarush.games.racer.RacerGame -up-|> com.javarush.engine.cell.Game
  com.javarush.games.racer.RacerGame o-- com.javarush.games.racer.FinishLine : finishLine
  com.javarush.games.racer.RacerGame o-- com.javarush.games.racer.PlayerCar : player
  com.javarush.games.racer.RacerGame o-- com.javarush.games.racer.ProgressBar : progressBar
  com.javarush.games.racer.RacerGame o-- com.javarush.games.racer.road.RoadManager : roadManager
  com.javarush.games.racer.RacerGame o-- com.javarush.games.racer.RoadMarking : roadMarking


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
